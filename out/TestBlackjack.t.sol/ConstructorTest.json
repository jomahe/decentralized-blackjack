{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_dealer",
      "outputs": [
        {
          "internalType": "contract Dealer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blackjack",
      "outputs": [
        {
          "internalType": "contract Blackjack",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFailNoValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialGameData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506136048061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001155760003560e01c806385226c8111620000a3578063c47a3042116200006e578063c47a304214620001ea578063cf50cbac1462000217578063e20c9f71146200022b578063fa7626d4146200023557600080fd5b806385226c8114620001a2578063916a17c614620001bb578063b5508aa914620001c5578063ba414fa614620001cf57600080fd5b80633f7286f411620000e45780633f7286f4146200016b57806366d9a9a014620001755780637678dfa1146200018e5780638433b2a0146200019857600080fd5b80630a9254e4146200011a5780631ed7831c14620001265780632ade388014620001485780633e5e3c231462000161575b600080fd5b6200012462000243565b005b620001306200063c565b6040516200013f919062001434565b60405180910390f35b62000152620006a0565b6040516200013f9190620014d7565b62000130620007ee565b6200013062000850565b6200017f620008b2565b6040516200013f91906200159d565b620001246200099c565b6200012462000a5f565b620001ac62000c60565b6040516200013f919062001654565b6200017f62000d3a565b620001ac62000e24565b620001d962000efe565b60405190151581526020016200013f565b601c54620001fe906001600160a01b031681565b6040516001600160a01b0390911681526020016200013f565b601d54620001fe906001600160a01b031681565b6200013062001035565b600754620001d99060ff1681565b604051620002519062001418565b604051809103906000f0801580156200026e573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b039290921691909117905560405163c88a5e6d60e01b8152306004820152678ac7230489e800006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015620002ea57600080fd5b505af1158015620002ff573d6000803e3d6000fd5b5050601d54604051670de0b6b3a76400009350600092506001600160a01b03909116906200032d9062001426565b6001600160a01b039283168152911660208201526040016040518091039082f090508015801562000362573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316908117909155601d54604051634fb2e45d60e01b8152600481019290925290911690634fb2e45d90602401600060405180830381600087803b158015620003c257600080fd5b505af1158015620003d7573d6000803e3d6000fd5b5050601d54604080514460208083019190915242828401526361bc221a93811b640100000000600160c01b031693909317821b6060820152815160588183030181526078820180845281519190940120928390529051919350600080516020620035af833981519152925081900360980190a162000457600d82620016d0565b62000464906001620016fd565b601e805460ff929092166101000261ff0019909216919091179055600d6200048f6127108362001719565b6200049b9190620016d0565b620004a890600162001730565b601e805460ff191660ff92909216919091179055604080516020808252601b908201527f4578706572696d656e74616c20706c617965722063617264733a2000000000008183015290517f0b2e13ff20ac7b474198655583edf70dedd2c1dc980e329c4fbb2fc0748b796b916060908290030190a1601e5460405161010090910460ff168152600080516020620035af8339815191529060200160405180910390a1601e5460405160ff9091168152600080516020620035af8339815191529060200160405180910390a1600d6200058260648362001719565b6200058e9190620016d0565b6200059b906001620016fd565b601f805460ff191660ff92909216919091179055604080516020808252601b908201527f4578706572696d656e74616c206465616c65722063617264733a2000000000008183015290517f0b2e13ff20ac7b474198655583edf70dedd2c1dc980e329c4fbb2fc0748b796b916060908290030190a1601f5460405160ff9091168152600080516020620035af8339815191529060200160405180910390a150565b606060148054806020026020016040519081016040528092919081815260200182805480156200069657602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000677575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620007e557600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620007cd57838290600052602060002001805462000739906200174c565b80601f016020809104026020016040519081016040528092919081815260200182805462000767906200174c565b8015620007b85780601f106200078c57610100808354040283529160200191620007b8565b820191906000526020600020905b8154815290600101906020018083116200079a57829003601f168201915b50505050508152602001906001019062000717565b505050508152505081526020019060010190620006c4565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000696576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000677575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000696576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000677575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620007e55760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200098357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009445790505b50505050508152505081526020019060010190620008d6565b601d54604051600091829182916001600160a01b031690620009be9062001426565b6001600160a01b039283168152911660208201526040016040518091039082f0905080158015620009f3573d6000803e3d6000fd5b509050806001600160a01b031663fde41e296040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000a35573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a5b919062001788565b5050565b601c546040805163fde41e2960e01b8152905162000ae1926001600160a01b03169163fde41e299160048083019260209291908290030181865afa15801562000aac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ad2919062001788565b670de0b6b3a764000062001097565b601c5460408051630133d46d60e51b8152905162000b5c926001600160a01b03169163267a8da09160048083019260209291908290030181865afa15801562000b2e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b549190620017b3565b60006200118e565b601c5460408051632ed8307760e11b8152905162000bda926001600160a01b031691635db060ee9160048083019260209291908290030181865afa15801562000ba9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bcf9190620017ea565b60ff16600162001097565b601c546040805163e8fa988d60e01b8152905162000c5e926001600160a01b03169163e8fa988d9160048083019260009291908290030181865afa15801562000c27573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c5191908101906200187e565b516040015160016200118e565b565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620007e557838290600052602060002001805462000ca6906200174c565b80601f016020809104026020016040519081016040528092919081815260200182805462000cd4906200174c565b801562000d255780601f1062000cf95761010080835404028352916020019162000d25565b820191906000526020600020905b81548152906001019060200180831162000d0757829003601f168201915b50505050508152602001906001019062000c84565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620007e55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000e0b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000dcc5790505b5050505050815250508152602001906001019062000d5e565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620007e557838290600052602060002001805462000e6a906200174c565b80601f016020809104026020016040519081016040528092919081815260200182805462000e98906200174c565b801562000ee95780601f1062000ebd5761010080835404028352916020019162000ee9565b820191906000526020600020905b81548152906001019060200180831162000ecb57829003601f168201915b50505050508152602001906001019062000e48565b600754600090610100900460ff161562000f215750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620010305760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000fb2917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620019fc565b60408051601f198184030181529082905262000fce9162001a2f565b6000604051808303816000865af19150503d80600081146200100d576040519150601f19603f3d011682016040523d82523d6000602084013e62001012565b606091505b50915050808060200190518101906200102c9190620017b3565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000696576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000677575050505050905090565b80821462000a5b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200110a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001143919062001a4d565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200117c919062001a86565b60405180910390a162000a5b62001305565b8015158215151462000a5b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620012059060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838262001258576040518060400160405280600581526020016466616c736560d81b81525062001276565b604051806040016040528060048152602001637472756560e01b8152505b60405162001285919062001ab1565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381620012d8576040518060400160405280600581526020016466616c736560d81b815250620012f6565b604051806040016040528060048152602001637472756560e01b8152505b6040516200117c919062001af8565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620014075760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620013a29291602001620019fc565b60408051601f1981840301815290829052620013be9162001a2f565b6000604051808303816000865af19150503d8060008114620013fd576040519150601f19603f3d011682016040523d82523d6000602084013e62001402565b606091505b505050505b6007805461ff001916610100179055565b6101cd8062001b2483390190565b6118be8062001cf183390190565b6020808252825182820181905260009190848201906040850190845b81811015620014775783516001600160a01b03168352928401929184019160010162001450565b50909695505050505050565b60005b83811015620014a057818101518382015260200162001486565b50506000910152565b60008151808452620014c381602086016020860162001483565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200158d57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156200157657605f1989850301835262001563848651620014a9565b948e01949350918d019160010162001544565b505050978a019794505091880191600101620014fe565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200164557898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156200162f5783516001600160e01b0319168252928b019260019290920191908b019062001603565b50978a01979550505091870191600101620015c5565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620016ad57603f198886030184526200169a858351620014a9565b945092850192908501906001016200167b565b5092979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082620016e257620016e2620016ba565b500690565b634e487b7160e01b600052601160045260246000fd5b80820180821115620017135762001713620016e7565b92915050565b6000826200172b576200172b620016ba565b500490565b60ff8181168382160190811115620017135762001713620016e7565b600181811c908216806200176157607f821691505b6020821081036200178257634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156200179b57600080fd5b5051919050565b805180151581146200103057600080fd5b600060208284031215620017c657600080fd5b620017d182620017a2565b9392505050565b805160ff811681146200103057600080fd5b600060208284031215620017fd57600080fd5b620017d182620017d8565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171562001844576200184462001808565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562001876576200187662001808565b604052919050565b600060208083850312156200189257600080fd5b825167ffffffffffffffff80821115620018ab57600080fd5b818501915085601f830112620018c057600080fd5b620018ca6200181e565b8087608085011115620018dc57600080fd5b835b60808501811015620019f057805184811115620018fa57600080fd5b85016080818b0312156200190d57600080fd5b620019176200181e565b8151868111156200192757600080fd5b8201601f81018c136200193957600080fd5b8051878111156200194e576200194e62001808565b8060051b6200195f8b82016200184a565b9182528281018b01918b8101908f8411156200197a57600080fd5b938c01935b83851015620019a3576200199385620017d8565b8252938c0193908c01906200197f565b855250620019b792505050828901620017a2565b88820152620019c960408301620017a2565b6040820152620019dc60608301620017a2565b6060820152845250918501918501620018de565b50979650505050505050565b6001600160e01b031983168152815160009062001a2181600485016020870162001483565b919091016004019392505050565b6000825162001a4381846020870162001483565b9190910192915050565b60408152600062001a7860408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600062001a7860408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062001adc60408301600a8152690808080808081319599d60b21b602082015260400190565b828103602084015262001af08185620014a9565b949350505050565b60408152600062001adc60408301600a8152690808080808149a59da1d60b21b60208201526040019056fe6080604052600160005534801561001557600080fd5b50600180546001600160a01b03191633179055610196806100376000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634fb2e45d146100465780635ec01e4d1461005b57806361bc221a14610075575b600080fd5b610059610054366004610109565b61007e565b005b6100636100b7565b60405190815260200160405180910390f35b61006360005481565b6001546001600160a01b0316331461009557600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000805481806100c683610139565b909155505060005460408051446020820152429181019190915260608101919091526080016040516020818303038152906040528051906020012060001c905090565b60006020828403121561011b57600080fd5b81356001600160a01b038116811461013257600080fd5b9392505050565b60006001820161015957634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122088bf80475480429e34bf9587183dc70c75e92dc142fb9ef33faf199e368cb11d64736f6c634300081500336080604052604051620018be380380620018be83398101604081905262000026916200029a565b62000031336200022d565b60003411620000865760405162461bcd60e51b815260206004820152601d60248201527f4e65656420746f20706c61636520616e20696e697469616c2062657421000000604482015260640160405180910390fd5b600e80546001600160a01b038085166001600160a01b031992831617909255600d805492841692821683179055600f80549091163317905560408051635ec01e4d60e01b8152905160009291635ec01e4d916004808301926020929190829003018187875af1158015620000fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001249190620002d2565b60018054808201825560208082047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69081018054601f94851661010090810a60ff81810219909316600d808b068a0185169290920217909355600a80548089019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a886820401805460648b048690068a018516928916840a92830292850219169190911790558654808801885560008890529485049093018054612710909804929092068601811693909416820a928302929093021990941617905534600955600c80546002805461ff00191690941790935561ffff1990921617905550620002ec915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200029557600080fd5b919050565b60008060408385031215620002ae57600080fd5b620002b9836200027d565b9150620002c9602084016200027d565b90509250929050565b600060208284031215620002e557600080fd5b5051919050565b6115c280620002fc6000396000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063f2fde38b11610059578063f2fde38b1461027e578063fa24f7431461029e578063fbfa77cf146102c3578063fde41e29146102e357600080fd5b80638da5cb5b14610209578063974ee4d8146102275780639de2ee211461023c578063e8fa988d1461025c57600080fd5b806348db5f89116100c657806348db5f891461016d5780635a20d60b146101a55780635db060ee146101d2578063715018a6146101f457600080fd5b80630a2d343a146100f85780631ef44aed1461011a578063267a8da01461012d57806334e6a7761461015a575b600080fd5b34801561010457600080fd5b506101186101133660046112c1565b610301565b005b6101186101283660046112c1565b610527565b34801561013957600080fd5b50600c54610100900460ff1660405190151581526020015b60405180910390f35b6101186101683660046112dc565b610918565b34801561017957600080fd5b50600f5461018d906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b3480156101b157600080fd5b506101c56101c03660046112c1565b610acc565b6040516101519190611316565b3480156101de57600080fd5b50600c5460405160ff9091168152602001610151565b34801561020057600080fd5b50610118610b59565b34801561021557600080fd5b506000546001600160a01b031661018d565b34801561023357600080fd5b506101c5610b6d565b34801561024857600080fd5b50600d5461018d906001600160a01b031681565b34801561026857600080fd5b50610271610be2565b60405161015191906113d2565b34801561028a57600080fd5b5061011861029936600461141f565b610cd2565b3480156102aa57600080fd5b506102b3610d50565b6040516101519493929190611448565b3480156102cf57600080fd5b50600e5461018d906001600160a01b031681565b3480156102ef57600080fd5b50600954604051908152602001610151565b600f546001600160a01b0316331461031857600080fd5b80600160ff82166004811061032f5761032f61147c565b600202015460000361034057600080fd5b600d5460408051635ec01e4d60e01b815290516000926001600160a01b031691635ec01e4d916004808301926020929190829003018187875af115801561038b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af9190611492565b905060006103be846000610e12565b600a805491925060009182906103d6576103d661147c565b90600052602060002090602091828204019190069054906101000a900460ff1690505b610404601583611004565b60ff168160ff16116104cf5760128160ff1610158061043457508060ff1660111480156104345750600b5460ff16155b6104cf57600061045a610448600d866114c1565b6104539060016114eb565b600a611004565b90506104676064856114fe565b600a8054600181810183556000928352602082047fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801805460ff808816601f9095166101000a94850294021916929092179091559195506104c791610e12565b9150506103f9565b60158160ff1611806104e657508060ff168260ff16115b15610520576104f6338684611022565b6040517f29822734f2619c764b25a111ff2328da08e02d6652fc891eb80227a6ec58774390600090a15b5050505050565b600f546001600160a01b0316331461053e57600080fd5b80600160ff8216600481106105555761055561147c565b600202015460000361056657600080fd5b6000600160ff84166004811061057e5761057e61147c565b600202018054604080516020808402820181019092528281529291908301828280156105e757602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116105b85790505b50505050509050806001815181106106015761060161147c565b602002602001015160ff168160008151811061061f5761061f61147c565b602002602001015160ff161461063457600080fd5b600954341461064257600080fd5b600c54600460ff9091161061065657600080fd5b600d5460408051635ec01e4d60e01b815290516000926001600160a01b031691635ec01e4d916004808301926020929190829003018187875af11580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c59190611492565b905060006106d4600d836114c1565b6106df9060016114eb565b905080600160ff8716600481106106f8576106f861147c565b600202018054600190811061070f5761070f61147c565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff1602179055506000600267ffffffffffffffff81111561075557610755611512565b60405190808252806020026020018201604052801561077e578160200160208202803683370190505b5090506000600d6107906064866114fe565b61079a91906114c1565b6107a59060016114eb565b9050846001815181106107ba576107ba61147c565b6020026020010151826000815181106107d5576107d561147c565b602002602001019060ff16908160ff168152505080826001815181106107fd576107fd61147c565b60ff928316602091820292909201810191909152604080516080810182528581526000928101839052600191810182905260608101839052600c80549194929391909216919061084c83611528565b91906101000a81548160ff021916908360ff16021790555060ff16600481106108775761087761147c565b6002020160008201518160000190805190602001906108979291906111a9565b506020820151600190910180546040808501516060909501511515620100000262ff0000199515156101000261ff00199515159590951661ffff1990931692909217939093179390931692909217909155517f55d842d7b8c6edb757dd47be55f527a7dec7b2070bff29e947e6d22a65a01fd690600090a150505050505050565b600f546001600160a01b0316331461092f57600080fd5b80600160ff8216600481106109465761094661147c565b600202015460000361095757600080fd5b82156109b757600160ff8316600481106109735761097361147c565b6002020160010160019054906101000a900460ff168015610995575060095434145b61099e57600080fd5b600c805461ff0019166101001790556009805460011b90555b600d805460408051635ec01e4d60e01b81529051600093926001600160a01b031691635ec01e4d916004808301926020929190829003018188875af1158015610a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a289190611492565b610a3291906114c1565b610a3d906001611547565b9050600160ff841660048110610a5557610a5561147c565b6002020180546001810182556000918252602080832090820401805460ff808616601f9094166101000a93840293021916919091179055610a979084906110e6565b15610ac6576040517f4883f1286f79865b3c6bdba55835c3aa09a60485fb4de5f7ad0acaab6810518490600090a15b50505050565b6060600160ff831660048110610ae457610ae461147c565b60020201805460408051602080840282018101909252828152929190830182828015610b4d57602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610b1e5790505b50505050509050919050565b610b616110ff565b610b6b6000611159565b565b600a80546040805160208084028201810190925282815260609390929091830182828015610bd857602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610ba95790505b5050505050905090565b610bea61124f565b6040805160808101909152600160046000835b82821015610cc95760408051600284028601805460a060208202840181019094526080830181815292939192849290918491840182828015610c7c57602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610c4d5790505b505050918352505060019182015460ff8082161515602080850191909152610100830482161515604085015262010000909204161515606090920191909152918352929092019101610bfd565b50505050905090565b610cda6110ff565b6001600160a01b038116610d445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610d4d81611159565b50565b60095460408051600a805460a060208202840181019094526080830181815260019484928491840182828015610dc357602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610d945790505b50505091835250506001919091015460ff808216151560208401526101008083048216151560408501526201000090920481161515606090930192909252600b90930154919282821692041684565b600080600083610e3b57600160ff861660048110610e3257610e3261147c565b60020201610e3e565b600a5b805480602002602001604051908101604052809291908181526020018280548015610ea657602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610e775790505b505050505090506000815190506000805b8260ff16811015610f35576000848281518110610ed657610ed661147c565b602002602001015190508060ff16600114610f1857600a8160ff161015610f0657610f018187611547565b610f11565b610f1186600a611547565b9550610f24565b610f2183611528565b92505b50610f2e81611560565b9050610eb7565b5060005b8160ff16811015610fab5760156001610f558360ff8616611579565b610f5f9190611579565b610f6a87600b611547565b60ff16610f7791906114eb565b1115610f8d57610f8685611528565b9450610f9b565b610f98600b86611547565b94505b610fa481611560565b9050610f39565b50600b8460ff16118015610fc2575060008160ff16115b600160ff891660048110610fd857610fd861147c565b6002020160010160006101000a81548160ff021916908315150217905550839450505050505b92915050565b60008160ff168360ff1610611019578161101b565b825b9392505050565b600160ff8316600481106110385761103861147c565b6002020160010160029054906101000a900460ff161561105757600080fd5b60008160ff1660151461106f5760095460021b61107d565b6002600160080154901c6005025b6040519091506001600160a01b0385169082156108fc029083906000818181858888f193505050501580156110b6573d6000803e3d6000fd5b506040517f34ec5380860d4fd12cd95d4d2f001afc87d48bfc50847bec134b0c315c8e2d7790600090a150505050565b600060156110f48484610e12565b60ff16119392505050565b6000546001600160a01b03163314610b6b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d3b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090601f0160209004810192821561123f5791602002820160005b8382111561121057835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026111d2565b801561123d5782816101000a81549060ff0219169055600101602081600001049283019260010302611210565b505b5061124b929150611296565b5090565b60405180608001604052806004905b6040805160808101825260608082526000602080840182905293830181905290820152825260001990920191018161125e5790505090565b5b8082111561124b5760008155600101611297565b803560ff811681146112bc57600080fd5b919050565b6000602082840312156112d357600080fd5b61101b826112ab565b600080604083850312156112ef57600080fd5b823580151581146112ff57600080fd5b915061130d602084016112ab565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561135157835160ff1683529284019291840191600101611332565b50909695505050505050565b8051608080845281519084018190526000916020919082019060a0860190845b8181101561139c57835160ff168352928401929184019160010161137d565b505082850151151583870152604085015115156040870152606085015192506113c9606087018415159052565b95945050505050565b602080825260009060a0830183820185845b600481101561141357601f1987850301835261140184835161135d565b935091840191908401906001016113e4565b50919695505050505050565b60006020828403121561143157600080fd5b81356001600160a01b038116811461101b57600080fd5b848152608060208201526000611461608083018661135d565b60ff9490941660408301525090151560609091015292915050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156114a457600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b6000826114d0576114d06114ab565b500690565b634e487b7160e01b600052601160045260246000fd5b80820180821115610ffe57610ffe6114d5565b60008261150d5761150d6114ab565b500490565b634e487b7160e01b600052604160045260246000fd5b600060ff821660ff810361153e5761153e6114d5565b60010192915050565b60ff8181168382160190811115610ffe57610ffe6114d5565b600060018201611572576115726114d5565b5060010190565b81810381811115610ffe57610ffe6114d556fea26469706673582212201d71d17278d23373c73a685a6dbb6d2ee621077e1e668aff87d91f8a1225601064736f6c634300081500332cab9790510fd8bdfbd2115288db33fec66691d476efc5427cfd4c0969301755a2646970667358221220de81eec3037dc921885f18b3e8c90b056abb2a72c4e36d39d4d5ea95085cf47364736f6c63430008150033",
    "sourceMap": "207:3364:22:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;;207:3364:22;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "207:3364:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:977;;;:::i;:::-;;2452:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;2738:178::-;;;:::i;:::-;;;;;;;:::i;1404:198:22:-;;;:::i;2550:262::-;;;:::i;2592:140:6:-;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;2157:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;5500:14:23;;5493:22;5475:41;;5463:2;5448:18;1819:584:0;5335:187:23;246:26:22;;;;;-1:-1:-1;;;;;246:26:22;;;;;;-1:-1:-1;;;;;5710:32:23;;;5692:51;;5680:2;5665:18;246:26:22;5527:222:23;278:21:22;;;;;-1:-1:-1;;;;;278:21:22;;;2304:142:6;;;:::i;1572:26:0:-;;;;;;;;;421:977:22;465:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:7:22;:22;;-1:-1:-1;;;;;;455:22:22;-1:-1:-1;;;;;455:22:22;;;;;;;;;;487:32;;-1:-1:-1;;;487:32:22;;503:4;487:32;;;6179:51:23;510:8:22;6246:18:23;;;6239:34;487:7:22;;;;6152:18:23;;487:32:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;618:7:22;;541:95;;562:7;;-1:-1:-1;592:3:22;;-1:-1:-1;;;;;;618:7:22;;;;541:95;;;:::i;:::-;-1:-1:-1;;;;;6514:15:23;;;6496:34;;6566:15;;6561:2;6546:18;;6539:43;6446:2;6431:18;541:95:22;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;529:9:22;:107;;-1:-1:-1;;;;;;529:107:22;-1:-1:-1;;;;;529:107:22;;;;;;;;;646:7;;:41;;-1:-1:-1;;;646:41:22;;;;;5692:51:23;;;;646:7:22;;;;:21;;5665:18:23;;646:41:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;905:7:22;;792:146;;;830:16;792:146;;;;7072:19:23;;;;868:15:22;7107:12:23;;;7100:28;905:15:22;7169::23;;;-1:-1:-1;;;;;7169:15:23;7166:44;;;;7158:53;;7144:12;;;7137:75;792:146:22;;;;;;;;;7228:12:23;;;792:146:22;;;765:187;;;;;;;7397:25:23;;;;978:15:22;;765:187;;-1:-1:-1;;;;;;;;;;;;978:15:22;-1:-1:-1;978:15:22;;;7370:18:23;978:15:22;;;1028:10;1036:2;1028:5;:10;:::i;:::-;1027:16;;1042:1;1027:16;:::i;:::-;1004:11;:40;;;;;;;;;-1:-1:-1;;1004:40:22;;;;;;;;;1095:2;1078:13;1086:5;1078;:13;:::i;:::-;1077:20;;;;:::i;:::-;1071:31;;1101:1;1071:31;:::i;:::-;1054:11;:48;;-1:-1:-1;;1054:48:22;;;;;;;;;;;;1118:41;;;1054:14;8538:21:23;;;8595:2;8575:18;;;8568:30;8634:29;8614:18;;;8607:57;1118:41:22;;;;8696:2:23;1118:41:22;;;;;;;1183:11;:14;1174:24;;1183:14;;;;;;8854:36:23;;-1:-1:-1;;;;;;;;;;;1174:24:22;1183:14;8827:18:23;1174:24:22;;;;;;;1222:11;:14;1213:24;;1222:14;;;;8854:36:23;;-1:-1:-1;;;;;;;;;;;1213:24:22;1222:14;8827:18:23;1213:24:22;;;;;;;1288:2;1273:11;1281:3;1273:5;:11;:::i;:::-;1272:18;;;;:::i;:::-;1271:24;;1294:1;1271:24;:::i;:::-;1248:11;:48;;-1:-1:-1;;1248:48:22;;;;;;;;;;;;1311:41;;;1248:14;9085:21:23;;;9142:2;9122:18;;;9115:30;9181:29;9161:18;;;9154:57;1311:41:22;;;;9243:2:23;1311:41:22;;;;;;;1376:11;:14;1367:24;;1376:14;;;;8854:36:23;;-1:-1:-1;;;;;;;;;;;1367:24:22;1376:14;8827:18:23;1367:24:22;;;;;;;445:953;421:977::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1404:198:22;1542:7;;1471:89;;1448:20;;;;;;-1:-1:-1;;;;;1542:7:22;;1471:89;;;:::i;:::-;-1:-1:-1;;;;;6514:15:23;;;6496:34;;6566:15;;6561:2;6546:18;;6539:43;6446:2;6431:18;1471:89:22;;;;;;;;;;;;;;;;;;;;;;;;;1448:112;;1570:10;-1:-1:-1;;;;;1570:23:22;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1438:164;1404:198::o;2550:262::-;2607:9;;:24;;;-1:-1:-1;;;2607:24:22;;;;2598:43;;-1:-1:-1;;;;;2607:9:22;;:22;;:24;;;;;;;;;;;;;;:9;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2633:7;2598:8;:43::i;:::-;2660:9;;:24;;;-1:-1:-1;;;2660:24:22;;;;2651:41;;-1:-1:-1;;;;;2660:9:22;;:22;;:24;;;;;;;;;;;;;;:9;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2686:5;2651:8;:41::i;:::-;2711:9;;:31;;;-1:-1:-1;;;2711:31:22;;;;2702:44;;-1:-1:-1;;;;;2711:9:22;;:29;;:31;;;;;;;;;;;;;;:9;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2702:44;;2744:1;2702:8;:44::i;:::-;2765:9;;:20;;;-1:-1:-1;;;2765:20:22;;;;2756:49;;-1:-1:-1;;;;;2765:9:22;;:18;;:20;;;;;:9;;:20;;;;;;;:9;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2765:20:22;;;;;;;;;;;;:::i;:::-;:23;:33;;;2800:4;2756:8;:49::i;:::-;2550:262::o;2592:140:6:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6179:51:23;;;-1:-1:-1;;;6246:18:23;;;6239:34;2196:43:0;;;;;;;;;6152:18:23;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;14470:2:23;14452:21;;;14509:2;14489:18;;;14482:30;14548:34;14543:2;14528:18;;14521:62;-1:-1:-1;;;14614:2:23;14599:18;;14592:32;14656:3;14641:19;;14268:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;789:312:2:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;15907:2:23;15889:21;;;15946:2;15926:18;;;15919:30;15985:34;15980:2;15965:18;;15958:62;-1:-1:-1;;;16051:2:23;16036:18;;16029:32;16093:3;16078:19;;15705:398;881:41:2;;;;;;;;941:52;972:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:2;;;;941:52;;;;;;:::i;:::-;;;;;;;;1012;1043:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:2;;;;1012:52;;;;;;:::i;2409:432:0:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;17200:51:23;;;-1:-1:-1;;;17267:18:23;;;17260:34;;;;2712:4:0;17310:18:23;;;17303:34;2489:11:0;;1671:64;2586:43;;17173:18:23;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:23:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:23;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:23;;14:658;-1:-1:-1;;;;;;14:658:23:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:23;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:23;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:23:o;1208:1742::-;1441:2;1493:21;;;1563:13;;1466:18;;;1585:22;;;1412:4;;1441:2;1626;;1644:18;;;;1681:1;1724:15;;;1709:31;;1705:40;;1768:15;;;1412:4;;1832:1089;1848:6;1843:3;1840:15;1832:1089;;;-1:-1:-1;;1917:22:23;;;1913:36;1901:49;;1973:13;;2060:9;;-1:-1:-1;;;;;2056:35:23;2041:51;;2131:11;;2125:18;2163:15;;;2156:27;;;2244:19;;2013:15;;;2276:24;;;2457:21;;;;2323:2;2405:17;;;2393:30;;2389:39;;;2347:15;;;;2502:1;2516:296;2532:8;2527:3;2524:17;2516:296;;;2638:2;2634:7;2625:6;2617;2613:19;2609:33;2602:5;2595:48;2670:42;2705:6;2694:8;2688:15;2670:42;:::i;:::-;2741:17;;;;2660:52;-1:-1:-1;2784:14:23;;;;2560:1;2551:11;2516:296;;;-1:-1:-1;;;2899:12:23;;;;2835:6;-1:-1:-1;;2864:15:23;;;;1874:1;1865:11;1832:1089;;;-1:-1:-1;2938:6:23;;1208:1742;-1:-1:-1;;;;;;;;;;1208:1742:23:o;2955:1567::-;3157:4;3186:2;3226;3215:9;3211:18;3256:2;3245:9;3238:21;3279:6;3314;3308:13;3345:6;3337;3330:22;3371:2;3361:12;;3404:2;3393:9;3389:18;3382:25;;3466:2;3456:6;3453:1;3449:14;3438:9;3434:30;3430:39;3504:2;3496:6;3492:15;3525:1;3546;3556:937;3572:6;3567:3;3564:15;3556:937;;;3641:22;;;-1:-1:-1;;3637:36:23;3625:49;;3697:13;;3784:9;;-1:-1:-1;;;;;3780:35:23;3765:51;;3855:11;;3849:18;3887:15;;;3880:27;;;3968:19;;3737:15;;;4000:24;;;4090:21;;;;4135:1;;4058:2;4046:15;;;4149:236;4165:8;4160:3;4157:17;4149:236;;;4246:15;;-1:-1:-1;;;;;;4242:42:23;4228:57;;4354:17;;;;4193:1;4184:11;;;;;4311:14;;;;4149:236;;;-1:-1:-1;4471:12:23;;;;4408:5;-1:-1:-1;;;4436:15:23;;;;3598:1;3589:11;3556:937;;;-1:-1:-1;4510:6:23;;2955:1567;-1:-1:-1;;;;;;;;;2955:1567:23:o;4527:803::-;4689:4;4718:2;4758;4747:9;4743:18;4788:2;4777:9;4770:21;4811:6;4846;4840:13;4877:6;4869;4862:22;4915:2;4904:9;4900:18;4893:25;;4977:2;4967:6;4964:1;4960:14;4949:9;4945:30;4941:39;4927:53;;5015:2;5007:6;5003:15;5036:1;5046:255;5060:6;5057:1;5054:13;5046:255;;;5153:2;5149:7;5137:9;5129:6;5125:22;5121:36;5116:3;5109:49;5181:40;5214:6;5205;5199:13;5181:40;:::i;:::-;5171:50;-1:-1:-1;5279:12:23;;;;5244:15;;;;5082:1;5075:9;5046:255;;;-1:-1:-1;5318:6:23;;4527:803;-1:-1:-1;;;;;;;4527:803:23:o;7433:127::-;7494:10;7489:3;7485:20;7482:1;7475:31;7525:4;7522:1;7515:15;7549:4;7546:1;7539:15;7565:112;7597:1;7623;7613:35;;7628:18;;:::i;:::-;-1:-1:-1;7662:9:23;;7565:112::o;7682:127::-;7743:10;7738:3;7734:20;7731:1;7724:31;7774:4;7771:1;7764:15;7798:4;7795:1;7788:15;7814:125;7879:9;;;7900:10;;;7897:36;;;7913:18;;:::i;:::-;7814:125;;;;:::o;8076:120::-;8116:1;8142;8132:35;;8147:18;;:::i;:::-;-1:-1:-1;8181:9:23;;8076:120::o;8201:148::-;8289:4;8268:12;;;8282;;;8264:31;;8307:13;;8304:39;;;8323:18;;:::i;9257:380::-;9336:1;9332:12;;;;9379;;;9400:61;;9454:4;9446:6;9442:17;9432:27;;9400:61;9507:2;9499:6;9496:14;9476:18;9473:38;9470:161;;9553:10;9548:3;9544:20;9541:1;9534:31;9588:4;9585:1;9578:15;9616:4;9613:1;9606:15;9470:161;;9257:380;;;:::o;9642:184::-;9712:6;9765:2;9753:9;9744:7;9740:23;9736:32;9733:52;;;9781:1;9778;9771:12;9733:52;-1:-1:-1;9804:16:23;;9642:184;-1:-1:-1;9642:184:23:o;9831:164::-;9907:13;;9956;;9949:21;9939:32;;9929:60;;9985:1;9982;9975:12;10000:202;10067:6;10120:2;10108:9;10099:7;10095:23;10091:32;10088:52;;;10136:1;10133;10126:12;10088:52;10159:37;10186:9;10159:37;:::i;:::-;10149:47;10000:202;-1:-1:-1;;;10000:202:23:o;10207:160::-;10284:13;;10337:4;10326:16;;10316:27;;10306:55;;10357:1;10354;10347:12;10372:204;10440:6;10493:2;10481:9;10472:7;10468:23;10464:32;10461:52;;;10509:1;10506;10499:12;10461:52;10532:38;10560:9;10532:38;:::i;10581:127::-;10642:10;10637:3;10633:20;10630:1;10623:31;10673:4;10670:1;10663:15;10697:4;10694:1;10687:15;10713:252;10785:2;10779:9;10827:3;10815:16;;10861:18;10846:34;;10882:22;;;10843:62;10840:88;;;10908:18;;:::i;:::-;10944:2;10937:22;10713:252;:::o;10970:275::-;11041:2;11035:9;11106:2;11087:13;;-1:-1:-1;;11083:27:23;11071:40;;11141:18;11126:34;;11162:22;;;11123:62;11120:88;;;11188:18;;:::i;:::-;11224:2;11217:22;10970:275;;-1:-1:-1;10970:275:23:o;11250:2053::-;11366:6;11397:2;11440;11428:9;11419:7;11415:23;11411:32;11408:52;;;11456:1;11453;11446:12;11408:52;11489:9;11483:16;11518:18;11559:2;11551:6;11548:14;11545:34;;;11575:1;11572;11565:12;11545:34;11613:6;11602:9;11598:22;11588:32;;11658:7;11651:4;11647:2;11643:13;11639:27;11629:55;;11680:1;11677;11670:12;11629:55;11704:22;;:::i;:::-;11748:3;11780:7;11774:3;11770:2;11766:12;11763:25;11760:45;;;11801:1;11798;11791:12;11760:45;11825:2;11836:1437;11860:3;11856:2;11852:12;11847:3;11844:21;11836:1437;;;11937:3;11931:10;11973:2;11960:11;11957:19;11954:39;;;11989:1;11986;11979:12;11954:39;12016:20;;12074:3;12056:16;;;12052:26;12049:46;;;12091:1;12088;12081:12;12049:46;12121:22;;:::i;:::-;12178:2;12172:9;12210:2;12200:8;12197:16;12194:36;;;12226:1;12223;12216:12;12194:36;12253:17;;12305:4;12297:13;;12293:27;-1:-1:-1;12283:55:23;;12334:1;12331;12324:12;12283:55;12367:2;12361:9;12393:2;12389;12386:10;12383:36;;;12399:18;;:::i;:::-;12449:2;12446:1;12442:10;12478:28;12502:2;12498;12494:11;12478:28;:::i;:::-;12550:17;;;12634:11;;;12630:20;;;12589:14;;;;12666:19;;;12663:39;;;12698:1;12695;12688:12;12663:39;12728:11;;;;12752:187;12770:6;12763:5;12760:17;12752:187;;;12850:34;12878:5;12850:34;:::i;:::-;12836:49;;12789:14;;;;12911;;;;12752:187;;;12952:20;;-1:-1:-1;13008:39:23;;-1:-1:-1;;;13035:11:23;;;13008:39;:::i;:::-;13003:2;12996:5;12992:14;12985:63;13084:39;13119:2;13115;13111:11;13084:39;:::i;:::-;13079:2;13072:5;13068:14;13061:63;13160:39;13195:2;13191;13187:11;13160:39;:::i;:::-;13155:2;13144:14;;13137:63;13213:18;;-1:-1:-1;13251:12:23;;;;11875;;11836:1437;;;-1:-1:-1;13292:5:23;11250:2053;-1:-1:-1;;;;;;;11250:2053:23:o;13587:384::-;-1:-1:-1;;;;;;13772:33:23;;13760:46;;13829:13;;13742:3;;13851:74;13829:13;13914:1;13905:11;;13898:4;13886:17;;13851:74;:::i;:::-;13945:16;;;;13963:1;13941:24;;13587:384;-1:-1:-1;;;13587:384:23:o;13976:287::-;14105:3;14143:6;14137:13;14159:66;14218:6;14213:3;14206:4;14198:6;14194:17;14159:66;:::i;:::-;14241:16;;;;;13976:287;-1:-1:-1;;13976:287:23:o;14835:348::-;15065:2;15054:9;15047:21;15028:4;15085:49;15130:2;15119:9;15115:18;14748:2;14736:15;;-1:-1:-1;;;14776:4:23;14767:14;;14760:36;14821:2;14812:12;;14671:159;15085:49;15077:57;;15170:6;15165:2;15154:9;15150:18;15143:34;14835:348;;;;:::o;15352:::-;15582:2;15571:9;15564:21;15545:4;15602:49;15647:2;15636:9;15632:18;15265:2;15253:15;;-1:-1:-1;;;15293:4:23;15284:14;;15277:36;15338:2;15329:12;;15188:159;16108:440;16358:2;16347:9;16340:21;16321:4;16384:49;16429:2;16418:9;16414:18;14748:2;14736:15;;-1:-1:-1;;;14776:4:23;14767:14;;14760:36;14821:2;14812:12;;14671:159;16384:49;16481:9;16473:6;16469:22;16464:2;16453:9;16449:18;16442:50;16509:33;16535:6;16527;16509:33;:::i;:::-;16501:41;16108:440;-1:-1:-1;;;;16108:440:23:o;16553:::-;16803:2;16792:9;16785:21;16766:4;16829:49;16874:2;16863:9;16859:18;15265:2;15253:15;;-1:-1:-1;;;15293:4:23;15284:14;;15277:36;15338:2;15329:12;;15188:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_dealer()": "cf50cbac",
    "blackjack()": "c47a3042",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFailNoValue()": "7678dfa1",
    "testInitialGameData()": "8433b2a0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_dealer\",\"outputs\":[{\"internalType\":\"contract Dealer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blackjack\",\"outputs\":[{\"internalType\":\"contract Blackjack\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFailNoValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialGameData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/TestBlackjack.t.sol\":\"ConstructorTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85\",\"dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9\",\"dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/TestBlackjack.sol\":{\"keccak256\":\"0xc5f8de4ccdf9a09be9834e5fce333f08cd3982f03f42d65ca6e5363bf25701f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86da777feb3c1cc786b0055fe8be558747d9494b5fe8be561f431142d32745aa\",\"dweb:/ipfs/QmZwXf5TjXhwojbX3SCu96dZ4Ht28CzsHhpCQxoyRBep6K\"]},\"src/TestDealer.sol\":{\"keccak256\":\"0x553282d9f4afe37861a1a0994252fb36ca70c0cf39b04a6f69db072c651f62c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa8fbe80f4da3e5f35b7be2a6960e22b5fac108f64472ef18b163324c57dc3a8\",\"dweb:/ipfs/QmZgySFnA9GRFDQiMwufvoRKEUThfko9TvmqXjSy5WGmP9\"]},\"test/TestBlackjack.t.sol\":{\"keccak256\":\"0xee9cdb173752f3d0394cdad3016633d1587f705a1d66e27db7fafd41f4baf4e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://451070b2668897d2f77cbd4c2fbe1f00671a9f442a132254c7c83aa5902250c4\",\"dweb:/ipfs/QmQ425ipYnipMHuq9o1tf4t5ajwwBnX8Tn91v5coD8m3rN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_dealer",
          "outputs": [
            {
              "internalType": "contract Dealer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blackjack",
          "outputs": [
            {
              "internalType": "contract Blackjack",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailNoValue"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialGameData"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/TestBlackjack.t.sol": "ConstructorTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a",
        "urls": [
          "bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85",
          "dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9",
        "urls": [
          "bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9",
          "dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/TestBlackjack.sol": {
        "keccak256": "0xc5f8de4ccdf9a09be9834e5fce333f08cd3982f03f42d65ca6e5363bf25701f0",
        "urls": [
          "bzz-raw://86da777feb3c1cc786b0055fe8be558747d9494b5fe8be561f431142d32745aa",
          "dweb:/ipfs/QmZwXf5TjXhwojbX3SCu96dZ4Ht28CzsHhpCQxoyRBep6K"
        ],
        "license": "MIT"
      },
      "src/TestDealer.sol": {
        "keccak256": "0x553282d9f4afe37861a1a0994252fb36ca70c0cf39b04a6f69db072c651f62c1",
        "urls": [
          "bzz-raw://aa8fbe80f4da3e5f35b7be2a6960e22b5fac108f64472ef18b163324c57dc3a8",
          "dweb:/ipfs/QmZgySFnA9GRFDQiMwufvoRKEUThfko9TvmqXjSy5WGmP9"
        ],
        "license": "MIT"
      },
      "test/TestBlackjack.t.sol": {
        "keccak256": "0xee9cdb173752f3d0394cdad3016633d1587f705a1d66e27db7fafd41f4baf4e9",
        "urls": [
          "bzz-raw://451070b2668897d2f77cbd4c2fbe1f00671a9f442a132254c7c83aa5902250c4",
          "dweb:/ipfs/QmQ425ipYnipMHuq9o1tf4t5ajwwBnX8Tn91v5coD8m3rN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/TestBlackjack.t.sol",
    "id": 44574,
    "exportedSymbols": {
      "Blackjack": [
        44275
      ],
      "ConstructorTest": [
        44573
      ],
      "Dealer": [
        44338
      ],
      "Test": [
        12199
      ],
      "console2": [
        30081
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3540:22",
    "nodes": [
      {
        "id": 44340,
        "nodeType": "PragmaDirective",
        "src": "32:23:22",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 44343,
        "nodeType": "ImportDirective",
        "src": "57:50:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44574,
        "sourceUnit": 12200,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44341,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12199,
              "src": "65:4:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44342,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30081,
              "src": "71:8:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44345,
        "nodeType": "ImportDirective",
        "src": "108:51:22",
        "nodes": [],
        "absolutePath": "src/TestBlackjack.sol",
        "file": "../src/TestBlackjack.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44574,
        "sourceUnit": 44276,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44344,
              "name": "Blackjack",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44275,
              "src": "116:9:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44347,
        "nodeType": "ImportDirective",
        "src": "160:45:22",
        "nodes": [],
        "absolutePath": "src/TestDealer.sol",
        "file": "../src/TestDealer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44574,
        "sourceUnit": 44339,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44346,
              "name": "Dealer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44338,
              "src": "168:6:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44573,
        "nodeType": "ContractDefinition",
        "src": "207:3364:22",
        "nodes": [
          {
            "id": 44352,
            "nodeType": "VariableDeclaration",
            "src": "246:26:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "c47a3042",
            "mutability": "mutable",
            "name": "blackjack",
            "nameLocation": "263:9:22",
            "scope": 44573,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Blackjack_$44275",
              "typeString": "contract Blackjack"
            },
            "typeName": {
              "id": 44351,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44350,
                "name": "Blackjack",
                "nameLocations": [
                  "246:9:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44275,
                "src": "246:9:22"
              },
              "referencedDeclaration": 44275,
              "src": "246:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Blackjack_$44275",
                "typeString": "contract Blackjack"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44355,
            "nodeType": "VariableDeclaration",
            "src": "278:21:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "cf50cbac",
            "mutability": "mutable",
            "name": "_dealer",
            "nameLocation": "292:7:22",
            "scope": 44573,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Dealer_$44338",
              "typeString": "contract Dealer"
            },
            "typeName": {
              "id": 44354,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44353,
                "name": "Dealer",
                "nameLocations": [
                  "278:6:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44338,
                "src": "278:6:22"
              },
              "referencedDeclaration": 44338,
              "src": "278:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Dealer_$44338",
                "typeString": "contract Dealer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44359,
            "nodeType": "VariableDeclaration",
            "src": "306:20:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "playerCards",
            "nameLocation": "315:11:22",
            "scope": 44573,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint8_$2_storage",
              "typeString": "uint8[2]"
            },
            "typeName": {
              "baseType": {
                "id": 44356,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "306:5:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "id": 44358,
              "length": {
                "hexValue": "32",
                "id": 44357,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "312:1:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "ArrayTypeName",
              "src": "306:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint8_$2_storage_ptr",
                "typeString": "uint8[2]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44363,
            "nodeType": "VariableDeclaration",
            "src": "332:20:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dealerCards",
            "nameLocation": "341:11:22",
            "scope": 44573,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint8_$2_storage",
              "typeString": "uint8[2]"
            },
            "typeName": {
              "baseType": {
                "id": 44360,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "332:5:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "id": 44362,
              "length": {
                "hexValue": "32",
                "id": 44361,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "338:1:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "ArrayTypeName",
              "src": "332:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint8_$2_storage_ptr",
                "typeString": "uint8[2]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44366,
            "nodeType": "VariableDeclaration",
            "src": "358:25:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "playerHand",
            "nameLocation": "373:10:22",
            "scope": 44573,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Hand_$43482_storage",
              "typeString": "struct Blackjack.Hand"
            },
            "typeName": {
              "id": 44365,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44364,
                "name": "Blackjack.Hand",
                "nameLocations": [
                  "358:9:22",
                  "368:4:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43482,
                "src": "358:14:22"
              },
              "referencedDeclaration": 43482,
              "src": "358:14:22",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Hand_$43482_storage_ptr",
                "typeString": "struct Blackjack.Hand"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44369,
            "nodeType": "VariableDeclaration",
            "src": "389:25:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dealerHand",
            "nameLocation": "404:10:22",
            "scope": 44573,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Hand_$43482_storage",
              "typeString": "struct Blackjack.Hand"
            },
            "typeName": {
              "id": 44368,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44367,
                "name": "Blackjack.Hand",
                "nameLocations": [
                  "389:9:22",
                  "399:4:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43482,
                "src": "389:14:22"
              },
              "referencedDeclaration": 43482,
              "src": "389:14:22",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Hand_$43482_storage_ptr",
                "typeString": "struct Blackjack.Hand"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44510,
            "nodeType": "FunctionDefinition",
            "src": "421:977:22",
            "nodes": [],
            "body": {
              "id": 44509,
              "nodeType": "Block",
              "src": "445:953:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44372,
                      "name": "_dealer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44355,
                      "src": "455:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dealer_$44338",
                        "typeString": "contract Dealer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "465:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Dealer_$44338_$",
                          "typeString": "function () returns (contract Dealer)"
                        },
                        "typeName": {
                          "id": 44374,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44373,
                            "name": "Dealer",
                            "nameLocations": [
                              "469:6:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44338,
                            "src": "469:6:22"
                          },
                          "referencedDeclaration": 44338,
                          "src": "469:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Dealer_$44338",
                            "typeString": "contract Dealer"
                          }
                        }
                      },
                      "id": 44376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "465:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dealer_$44338",
                        "typeString": "contract Dealer"
                      }
                    },
                    "src": "455:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dealer_$44338",
                      "typeString": "contract Dealer"
                    }
                  },
                  "id": 44378,
                  "nodeType": "ExpressionStatement",
                  "src": "455:22:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44384,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "503:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConstructorTest_$44573",
                              "typeString": "contract ConstructorTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConstructorTest_$44573",
                              "typeString": "contract ConstructorTest"
                            }
                          ],
                          "id": 44383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "495:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44382,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "495:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "495:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "510:8:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44379,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "487:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "490:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13529,
                      "src": "487:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:32:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44388,
                  "nodeType": "ExpressionStatement",
                  "src": "487:32:22"
                },
                {
                  "expression": {
                    "id": 44404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44389,
                      "name": "blackjack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44352,
                      "src": "529:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Blackjack_$44275",
                        "typeString": "contract Blackjack"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 44397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "592:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 44396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "584:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "584:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "584:12:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 44401,
                              "name": "_dealer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44355,
                              "src": "618:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Dealer_$44338",
                                "typeString": "contract Dealer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Dealer_$44338",
                                "typeString": "contract Dealer"
                              }
                            ],
                            "id": 44400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "610:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44399,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "610:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "610:16:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 44392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "541:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Blackjack_$44275_$",
                            "typeString": "function (address,address) payable returns (contract Blackjack)"
                          },
                          "typeName": {
                            "id": 44391,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 44390,
                              "name": "Blackjack",
                              "nameLocations": [
                                "545:9:22"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 44275,
                              "src": "545:9:22"
                            },
                            "referencedDeclaration": 44275,
                            "src": "545:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Blackjack_$44275",
                              "typeString": "contract Blackjack"
                            }
                          }
                        },
                        "id": 44394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "hexValue": "31",
                            "id": 44393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "562:7:22",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "src": "541:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Blackjack_$44275_$value",
                          "typeString": "function (address,address) payable returns (contract Blackjack)"
                        }
                      },
                      "id": 44403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "541:95:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Blackjack_$44275",
                        "typeString": "contract Blackjack"
                      }
                    },
                    "src": "529:107:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Blackjack_$44275",
                      "typeString": "contract Blackjack"
                    }
                  },
                  "id": 44405,
                  "nodeType": "ExpressionStatement",
                  "src": "529:107:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44411,
                            "name": "blackjack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44352,
                            "src": "676:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Blackjack_$44275",
                              "typeString": "contract Blackjack"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Blackjack_$44275",
                              "typeString": "contract Blackjack"
                            }
                          ],
                          "id": 44410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "668:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44409,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "668:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "668:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44406,
                        "name": "_dealer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44355,
                        "src": "646:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dealer_$44338",
                          "typeString": "contract Dealer"
                        }
                      },
                      "id": 44408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "654:13:22",
                      "memberName": "transferOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44314,
                      "src": "646:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44414,
                  "nodeType": "ExpressionStatement",
                  "src": "646:41:22"
                },
                {
                  "assignments": [
                    44416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44416,
                      "mutability": "mutable",
                      "name": "draws",
                      "nameLocation": "739:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44509,
                      "src": "734:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44415,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "734:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44431,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 44422,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "830:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 44423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "836:10:22",
                                "memberName": "prevrandao",
                                "nodeType": "MemberAccess",
                                "src": "830:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 44424,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "868:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 44425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "874:9:22",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "868:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 44426,
                                  "name": "_dealer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44355,
                                  "src": "905:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dealer_$44338",
                                    "typeString": "contract Dealer"
                                  }
                                },
                                "id": 44427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "913:7:22",
                                "memberName": "counter",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44280,
                                "src": "905:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              ],
                              "expression": {
                                "id": 44420,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "792:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 44421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "796:12:22",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "792:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 44428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "792:146:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 44419,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "765:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 44429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "765:187:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 44418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "747:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 44417,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "747:4:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 44430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:215:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "734:228:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44433,
                        "name": "draws",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44416,
                        "src": "987:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44432,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "978:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 44434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44435,
                  "nodeType": "EmitStatement",
                  "src": "973:20:22"
                },
                {
                  "expression": {
                    "id": 44448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44436,
                        "name": "playerCards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44359,
                        "src": "1004:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$2_storage",
                          "typeString": "uint8[2] storage ref"
                        }
                      },
                      "id": 44438,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 44437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1016:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1004:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 44446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 44443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 44441,
                                  "name": "draws",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44416,
                                  "src": "1028:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "hexValue": "3133",
                                  "id": 44442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1036:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_13_by_1",
                                    "typeString": "int_const 13"
                                  },
                                  "value": "13"
                                },
                                "src": "1028:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 44444,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1027:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 44445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1042:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1027:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 44440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1021:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 44439,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:5:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1021:23:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1004:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 44449,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:40:22"
                },
                {
                  "expression": {
                    "id": 44464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44450,
                        "name": "playerCards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44359,
                        "src": "1054:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$2_storage",
                          "typeString": "uint8[2] storage ref"
                        }
                      },
                      "id": 44452,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1066:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1054:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 44463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 44460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 44457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 44455,
                                    "name": "draws",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44416,
                                    "src": "1078:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "3130303030",
                                    "id": 44456,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1086:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "src": "1078:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 44458,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1077:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "hexValue": "3133",
                              "id": 44459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1095:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_13_by_1",
                                "typeString": "int_const 13"
                              },
                              "value": "13"
                            },
                            "src": "1077:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 44454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1071:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 44453,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1071:5:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1071:27:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 44462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1101:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1071:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1054:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 44465,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:48:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4578706572696d656e74616c20706c617965722063617264733a20",
                        "id": 44467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1129:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61a15c74aec0d07540f89e9d5bd39a74b4317c7a56ec3ee55e3c824a57dd002f",
                          "typeString": "literal_string \"Experimental player cards: \""
                        },
                        "value": "Experimental player cards: "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_61a15c74aec0d07540f89e9d5bd39a74b4317c7a56ec3ee55e3c824a57dd002f",
                          "typeString": "literal_string \"Experimental player cards: \""
                        }
                      ],
                      "id": 44466,
                      "name": "log_string",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1118:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 44468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44469,
                  "nodeType": "EmitStatement",
                  "src": "1113:46:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 44471,
                          "name": "playerCards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44359,
                          "src": "1183:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$2_storage",
                            "typeString": "uint8[2] storage ref"
                          }
                        },
                        "id": 44473,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 44472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1195:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1183:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 44470,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1174:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 44474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:24:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44475,
                  "nodeType": "EmitStatement",
                  "src": "1169:29:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 44477,
                          "name": "playerCards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44359,
                          "src": "1222:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$2_storage",
                            "typeString": "uint8[2] storage ref"
                          }
                        },
                        "id": 44479,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 44478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1234:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1222:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 44476,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1213:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 44480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1213:24:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44481,
                  "nodeType": "EmitStatement",
                  "src": "1208:29:22"
                },
                {
                  "expression": {
                    "id": 44497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44482,
                        "name": "dealerCards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44363,
                        "src": "1248:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$2_storage",
                          "typeString": "uint8[2] storage ref"
                        }
                      },
                      "id": 44484,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1260:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1248:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 44495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 44492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 44489,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 44487,
                                        "name": "draws",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44416,
                                        "src": "1273:5:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "313030",
                                        "id": 44488,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1281:3:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      },
                                      "src": "1273:11:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 44490,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1272:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "hexValue": "3133",
                                  "id": 44491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1288:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_13_by_1",
                                    "typeString": "int_const 13"
                                  },
                                  "value": "13"
                                },
                                "src": "1272:18:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 44493,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1271:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 44494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1294:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1271:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 44486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1265:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 44485,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1265:5:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1265:31:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1248:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 44498,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:48:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4578706572696d656e74616c206465616c65722063617264733a20",
                        "id": 44500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1322:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ba5bca95242994251fb0efc1f79de0ca64626749a6702ac965b0a0582876d90",
                          "typeString": "literal_string \"Experimental dealer cards: \""
                        },
                        "value": "Experimental dealer cards: "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5ba5bca95242994251fb0efc1f79de0ca64626749a6702ac965b0a0582876d90",
                          "typeString": "literal_string \"Experimental dealer cards: \""
                        }
                      ],
                      "id": 44499,
                      "name": "log_string",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1311:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 44501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44502,
                  "nodeType": "EmitStatement",
                  "src": "1306:46:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 44504,
                          "name": "dealerCards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44363,
                          "src": "1376:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$2_storage",
                            "typeString": "uint8[2] storage ref"
                          }
                        },
                        "id": 44506,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 44505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1388:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1376:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 44503,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1367:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 44507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:24:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44508,
                  "nodeType": "EmitStatement",
                  "src": "1362:29:22"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "430:5:22",
            "parameters": {
              "id": 44370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:22"
            },
            "returnParameters": {
              "id": 44371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:22"
            },
            "scope": 44573,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44537,
            "nodeType": "FunctionDefinition",
            "src": "1404:198:22",
            "nodes": [],
            "body": {
              "id": 44536,
              "nodeType": "Block",
              "src": "1438:164:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44515,
                      "mutability": "mutable",
                      "name": "blackjack2",
                      "nameLocation": "1458:10:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44536,
                      "src": "1448:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Blackjack_$44275",
                        "typeString": "contract Blackjack"
                      },
                      "typeName": {
                        "id": 44514,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44513,
                          "name": "Blackjack",
                          "nameLocations": [
                            "1448:9:22"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44275,
                          "src": "1448:9:22"
                        },
                        "referencedDeclaration": 44275,
                        "src": "1448:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Blackjack_$44275",
                          "typeString": "contract Blackjack"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44530,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 44523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1516:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 44522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1508:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44521,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1508:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1508:12:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44527,
                            "name": "_dealer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44355,
                            "src": "1542:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dealer_$44338",
                              "typeString": "contract Dealer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dealer_$44338",
                              "typeString": "contract Dealer"
                            }
                          ],
                          "id": 44526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1534:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44525,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1534:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1534:16:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1471:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Blackjack_$44275_$",
                          "typeString": "function (address,address) payable returns (contract Blackjack)"
                        },
                        "typeName": {
                          "id": 44517,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44516,
                            "name": "Blackjack",
                            "nameLocations": [
                              "1475:9:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44275,
                            "src": "1475:9:22"
                          },
                          "referencedDeclaration": 44275,
                          "src": "1475:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Blackjack_$44275",
                            "typeString": "contract Blackjack"
                          }
                        }
                      },
                      "id": 44520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "30",
                          "id": 44519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1492:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "src": "1471:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Blackjack_$44275_$value",
                        "typeString": "function (address,address) payable returns (contract Blackjack)"
                      }
                    },
                    "id": 44529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:89:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Blackjack_$44275",
                      "typeString": "contract Blackjack"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1448:112:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44531,
                        "name": "blackjack2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44515,
                        "src": "1570:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Blackjack_$44275",
                          "typeString": "contract Blackjack"
                        }
                      },
                      "id": 44533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1581:12:22",
                      "memberName": "getBetAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44218,
                      "src": "1570:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 44534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44535,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:25:22"
                }
              ]
            },
            "functionSelector": "7678dfa1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailNoValue",
            "nameLocation": "1413:15:22",
            "parameters": {
              "id": 44511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1428:2:22"
            },
            "returnParameters": {
              "id": 44512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1438:0:22"
            },
            "scope": 44573,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44572,
            "nodeType": "FunctionDefinition",
            "src": "2550:262:22",
            "nodes": [],
            "body": {
              "id": 44571,
              "nodeType": "Block",
              "src": "2588:224:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44541,
                            "name": "blackjack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44352,
                            "src": "2607:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Blackjack_$44275",
                              "typeString": "contract Blackjack"
                            }
                          },
                          "id": 44542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2617:12:22",
                          "memberName": "getBetAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44218,
                          "src": "2607:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2607:24:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2633:7:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 44540,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2598:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:43:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44546,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:43:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44548,
                            "name": "blackjack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44352,
                            "src": "2660:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Blackjack_$44275",
                              "typeString": "contract Blackjack"
                            }
                          },
                          "id": 44549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2670:12:22",
                          "memberName": "getInsurance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44236,
                          "src": "2660:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 44550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2660:24:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 44551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2686:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44547,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 2485,
                      "src": "2651:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 44552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2651:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44553,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:41:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44555,
                            "name": "blackjack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44352,
                            "src": "2711:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Blackjack_$44275",
                              "typeString": "contract Blackjack"
                            }
                          },
                          "id": 44556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2721:19:22",
                          "memberName": "getNextOpenHandSlot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44227,
                          "src": "2711:29:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 44557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2711:31:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2744:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 44554,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2702:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2702:44:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44560,
                  "nodeType": "ExpressionStatement",
                  "src": "2702:44:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 44562,
                                "name": "blackjack",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44352,
                                "src": "2765:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Blackjack_$44275",
                                  "typeString": "contract Blackjack"
                                }
                              },
                              "id": 44563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2775:8:22",
                              "memberName": "getHands",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44248,
                              "src": "2765:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Hand_$43482_memory_ptr_$4_memory_ptr_$",
                                "typeString": "function () view external returns (struct Blackjack.Hand memory[4] memory)"
                              }
                            },
                            "id": 44564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2765:20:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Hand_$43482_memory_ptr_$4_memory_ptr",
                              "typeString": "struct Blackjack.Hand memory[4] memory"
                            }
                          },
                          "id": 44566,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 44565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2786:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2765:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hand_$43482_memory_ptr",
                            "typeString": "struct Blackjack.Hand memory"
                          }
                        },
                        "id": 44567,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2789:9:22",
                        "memberName": "firstTurn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43479,
                        "src": "2765:33:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2800:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44561,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 2485,
                      "src": "2756:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 44569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2756:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44570,
                  "nodeType": "ExpressionStatement",
                  "src": "2756:49:22"
                }
              ]
            },
            "functionSelector": "8433b2a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialGameData",
            "nameLocation": "2559:19:22",
            "parameters": {
              "id": 44538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2578:2:22"
            },
            "returnParameters": {
              "id": 44539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:0:22"
            },
            "scope": 44573,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44348,
              "name": "Test",
              "nameLocations": [
                "235:4:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12199,
              "src": "235:4:22"
            },
            "id": 44349,
            "nodeType": "InheritanceSpecifier",
            "src": "235:4:22"
          }
        ],
        "canonicalName": "ConstructorTest",
        "contractDependencies": [
          44275,
          44338
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44573,
          12199,
          12148,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "ConstructorTest",
        "nameLocation": "216:15:22",
        "scope": 44574,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 22
}